language: minimal

sudo: false

env:
  global:
  - secure: hnQJ45kvtEwUZjbbKbjBNDCDnJsp+fCy8ioKw2GV43+S9IpJVV4vqJwsdjPRjdQFB8nVdQTRmfAGPDjqzxO5OACPDBLi7kvl7IpKvZCRW43CVCT9z/bHTCKB5fdqJJgpV0laS9sbvncyjeKMA9l8hvwzyOFLRZ6zYORrBXO3VEieMGRmwTHp9ztbmpJiBTBvzRf3m2xqak9f2/P9JecBELJAfy7Zvcwx8TXOvevmcniJRxPFqgr9iHHAyCU7Agw10j3+rqTOxWEw6iiyD73ZE5sRN3Lf1K2BqehdVAdpdxZpLbdccdTOOm5RpW3OtKhMCGDxOgXhSf1B+kDP/a7ZNAC717QXSp6VXofTkYhE1wvLvj9LTE8sAcWkpItZ8qLYDdmbjPfb5sGhxQhKwUWl8t+DRovTJBi5ogQNOe9V2RMrK79Wpx472GwplsWe+ZHjJ8C6Yyt7F+SruCHmGQr+XmQKgEjDT48gY1Icso7DcpFCvIFrjB2Iw/KsOU2G1BkDdHrseurXGG5V4jriWJFW5XnzrajJYXjAy5cVfuTBoyvzTXM+QM54NhzFNyhnaNKYVhCHb3QZka2BHA8ck79+jMRT7S0pZC31DvqaBEDwEIGORjhxtAYRmfC/KlvuJHmW5yMldMdDC3T6e0O1t3IZvkTF8+gZF3tMr4VZseX2OhE=

matrix:
  fast_finish: true
  include:
    - name: "python-3.6"
      env: PY=3.6
    - name: "python-3.7"
      env: PY=3.7
    - name: "coding_standards"
      env: PY=3.7
    - name: "tarball"
      env: PY=3.7
    - name: "docs"
      env: PY=3.7


before_install:
  # Install miniconda and create TEST env.
  - |
    wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
    bash miniconda.sh -b -p $HOME/miniconda
    export PATH="$HOME/miniconda/bin:$PATH"
    conda config --set always_yes yes --set changeps1 no --set show_channel_urls true
    conda update --quiet conda
    conda config --add channels conda-forge --force
    conda config --set channel_priority strict
    conda create --name TEST python=$PY --file requirements.txt --file requirements-dev.txt
    source activate TEST
    conda info --all

install:
  - pip install -e . --no-deps --force-reinstall

before_script: 
  - export DISPLAY=:99.0
  - sh -e /etc/init.d/xvfb start
  - sleep 3

script:
  - if [[ $TRAVIS_JOB_NAME == python-* ]]; then
       cp -r tests/ /tmp ;
       pushd /tmp && pytest --cov-report term-missing --cov=yodapy --cov-config .coveragerc -vv tests && popd ;
    fi

  - if [[ $TRAVIS_JOB_NAME == 'coding_standards' ]]; then
      pytest --flake8 -m flake8 ;
    fi

  - if [[ $TRAVIS_JOB_NAME == 'tarball' ]]; then
      pip wheel . -w dist --no-deps ;
      check-manifest --verbose ;
      twine check dist/* ;
    fi

  - |
    if [[ $TRAVIS_JOB_NAME == 'docs' ]]; then
      set -e
      conda install --yes doctr
      pushd docs
      make clean html linkcheck
      popd
      python -m doctr deploy --sync .
      python -m doctr deploy --sync --no-require-master --built-docs docs/build/html "docs-$TRAVIS_BRANCH"
    fi

after_success:
- cd $TRAVIS_BUILD_DIR
- coveralls
